"""Create initial tables

Revision ID: 571738035be1
Revises: 
Create Date: 2025-05-23 21:08:17.504108

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '571738035be1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('clients', sa.Column('name', sa.String(), nullable=True))
    op.add_column('clients', sa.Column('phone', sa.String(), nullable=True))
    op.alter_column('clients', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('clients', 'cpf',
               existing_type=sa.BIGINT(),
               type_=sa.String(),
               nullable=True)
    op.drop_constraint(op.f('clients_email_key'), 'clients', type_='unique')
    op.create_index(op.f('ix_clients_email'), 'clients', ['email'], unique=True)
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_index(op.f('ix_clients_name'), 'clients', ['name'], unique=False)
    op.drop_column('clients', 'nome')
    op.add_column('order_products', sa.Column('quantity', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('order_products_product_id_fkey'), 'order_products', type_='foreignkey')
    op.drop_constraint(op.f('order_products_order_id_fkey'), 'order_products', type_='foreignkey')
    op.create_foreign_key(None, 'order_products', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'order_products', 'orders', ['order_id'], ['id'])
    op.add_column('orders', sa.Column('client_id', sa.Integer(), nullable=True))
    op.alter_column('orders', 'status',
               existing_type=sa.BOOLEAN(),
               type_=sa.String(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_foreign_key(None, 'orders', 'clients', ['client_id'], ['id'])
    op.drop_column('orders', 'created_at')
    op.add_column('products', sa.Column('description', sa.String(), nullable=True))
    op.add_column('products', sa.Column('sale_price', sa.Float(), nullable=True))
    op.add_column('products', sa.Column('barcode', sa.String(), nullable=True))
    op.add_column('products', sa.Column('section', sa.String(), nullable=True))
    op.add_column('products', sa.Column('initial_stock', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('expiration_date', sa.Date(), nullable=True))
    op.add_column('products', sa.Column('images', sa.String(), nullable=True))
    op.drop_constraint(op.f('products_codigo_barras_key'), 'products', type_='unique')
    op.create_index(op.f('ix_products_barcode'), 'products', ['barcode'], unique=True)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.drop_column('products', 'data_validade')
    op.drop_column('products', 'descricao')
    op.drop_column('products', 'secao')
    op.drop_column('products', 'codigo_barras')
    op.drop_column('products', 'imagens')
    op.drop_column('products', 'valor_venda')
    op.drop_column('products', 'estoque_inicial')
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'role')
    op.drop_column('users', 'password')
    op.add_column('whatsapp_logs', sa.Column('phone_number', sa.String(), nullable=False))
    op.add_column('whatsapp_logs', sa.Column('message_content', sa.String(), nullable=False))
    op.add_column('whatsapp_logs', sa.Column('response_json', sa.String(), nullable=True))
    op.create_index(op.f('ix_whatsapp_logs_id'), 'whatsapp_logs', ['id'], unique=False)
    op.drop_column('whatsapp_logs', 'numero')
    op.drop_column('whatsapp_logs', 'mensagem')
    op.drop_column('whatsapp_logs', 'resposta_json')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('whatsapp_logs', sa.Column('resposta_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('whatsapp_logs', sa.Column('mensagem', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('whatsapp_logs', sa.Column('numero', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_whatsapp_logs_id'), table_name='whatsapp_logs')
    op.drop_column('whatsapp_logs', 'response_json')
    op.drop_column('whatsapp_logs', 'message_content')
    op.drop_column('whatsapp_logs', 'phone_number')
    op.add_column('users', sa.Column('password', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('role', sa.VARCHAR(length=20), server_default=sa.text("'user'::character varying"), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'hashed_password')
    op.add_column('products', sa.Column('estoque_inicial', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('valor_venda', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('imagens', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('codigo_barras', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('secao', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('products', sa.Column('data_validade', sa.DATE(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_barcode'), table_name='products')
    op.create_unique_constraint(op.f('products_codigo_barras_key'), 'products', ['codigo_barras'], postgresql_nulls_not_distinct=False)
    op.drop_column('products', 'images')
    op.drop_column('products', 'expiration_date')
    op.drop_column('products', 'initial_stock')
    op.drop_column('products', 'section')
    op.drop_column('products', 'barcode')
    op.drop_column('products', 'sale_price')
    op.drop_column('products', 'description')
    op.add_column('orders', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.alter_column('orders', 'status',
               existing_type=sa.String(),
               type_=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_column('orders', 'client_id')
    op.drop_constraint(None, 'order_products', type_='foreignkey')
    op.drop_constraint(None, 'order_products', type_='foreignkey')
    op.create_foreign_key(op.f('order_products_order_id_fkey'), 'order_products', 'orders', ['order_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('order_products_product_id_fkey'), 'order_products', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.drop_column('order_products', 'quantity')
    op.add_column('clients', sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_clients_name'), table_name='clients')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_email'), table_name='clients')
    op.create_unique_constraint(op.f('clients_email_key'), 'clients', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('clients', 'cpf',
               existing_type=sa.String(),
               type_=sa.BIGINT(),
               nullable=False)
    op.alter_column('clients', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('clients', 'phone')
    op.drop_column('clients', 'name')
    # ### end Alembic commands ###
